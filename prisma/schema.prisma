generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model abouts {
  id           Int       @id @default(autoincrement())
  title        String?   @db.VarChar(255)
  intro        String?
  bioShort     String?
  bioMedium    String?
  bioLong      String?
  published_at DateTime? @db.Timestamptz(6)
  created_by   Int?
  updated_by   Int?
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at   DateTime? @default(now()) @db.Timestamptz(6)
}

model activities {
  id                  Int       @id @default(autoincrement())
  activityName        String?   @db.VarChar(255)
  beginTimestamp      String?   @db.VarChar(255)
  activityType        Json?
  distance            Float?
  duration            Float?
  elapsedDuration     Float?
  movingDuration      Float?
  elevationGain       Float?
  elevationLoss       Float?
  averageSpeed        Float?
  maxSpeed            Float?
  startLatitude       Float?
  startLongitude      Float?
  endLatitude         Float?
  endLongitude        Float?
  created_by          Int?
  updated_by          Int?
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  updated_at          DateTime? @default(now()) @db.Timestamptz(6)
  temperature         Decimal?  @db.Decimal(10, 2)
  weather_main        String?   @db.VarChar(255)
  weather_description String?   @db.VarChar(255)
  weather_icon        String?   @db.VarChar(255)
  details             Json?
  minElevation        Float?
  maxElevation        Float?
  sportTypeId         Int?
  activityId          BigInt?   @unique
  grit                Float?
  flow                Float?
  jumpCount           Int?
  caloriesEstimated   Float?
  caloriesConsumed    Float?
  waterEstimated      Float?
  waterConsumed       Float?
  achievement_count   Int?
  kudos_count         Int?
  comment_count       Int?
  athlete_count       Int?
  commute             Boolean?
  average_watts       Decimal?  @db.Decimal(10, 2)
  type                String?   @db.VarChar(255)
  start_date          DateTime? @db.Timestamptz(6)
  slug                String?   @unique @db.VarChar(255)
}

model audience {
  id         Int     @id @default(autoincrement())
  name       String  @db.VarChar(255)
  key        String? @unique @db.VarChar(255)
  created_by Int?
  updated_by Int?
}

model blogrolls {
  id                Int       @id @default(autoincrement())
  name              String?   @db.VarChar(255)
  websiteUrl        String?   @db.VarChar(255)
  bio               String?
  profilePictureUrl String?   @db.VarChar(255)
  published_at      DateTime? @db.Timestamptz(6)
  created_by        Int?
  updated_by        Int?
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  updated_at        DateTime? @default(now()) @db.Timestamptz(6)
  feedUrl           String?   @db.VarChar(255)
}

model comments {
  id           Int       @id @default(autoincrement())
  slug         String?   @db.VarChar(255)
  name         String?   @db.VarChar(255)
  email        String?   @db.VarChar(255)
  text         String?
  published_at DateTime? @db.Timestamptz(6)
  created_by   Int?
  updated_by   Int?
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at   DateTime? @default(now()) @db.Timestamptz(6)
}

model components_cv_educations {
  id          Int     @id @default(autoincrement())
  type        String? @db.VarChar(255)
  location    String? @db.VarChar(255)
  date        String? @db.VarChar(255)
  description String? @db.VarChar(255)
}

model components_cv_interests {
  id          Int     @id @default(autoincrement())
  title       String? @db.VarChar(255)
  description String?
}

model components_cv_single_skills {
  id Int @id @default(autoincrement())
}

model components_cv_skillnames {
  id   Int     @id @default(autoincrement())
  name String? @db.VarChar(255)
}

model components_cv_skills {
  id                              Int                               @id @default(autoincrement())
  name                            String?                           @db.VarChar(255)
  components_cv_skills_components components_cv_skills_components[]
}

model components_cv_skills_components {
  id                     Int                  @id @default(autoincrement())
  field                  String               @db.VarChar(255)
  order                  Int
  component_type         String               @db.VarChar(255)
  component_id           Int
  components_cv_skill_id Int
  components_cv_skills   components_cv_skills @relation(fields: [components_cv_skill_id], references: [id])
}

model components_cv_timelines {
  id              Int     @id @default(autoincrement())
  role            String? @db.VarChar(255)
  company         String? @db.VarChar(255)
  location        String? @db.VarChar(255)
  date            String? @db.VarChar(255)
  description     String? @db.VarChar(255)
  longDescription String?
  tags            String? @db.VarChar(255)
  url             String? @db.VarChar(255)
}

model components_geometry_geometries {
  id          Int     @id @default(autoincrement())
  type        String? @db.VarChar(255)
  coordinates Json?
}

model components_images_post_images {
  id      Int     @id @default(autoincrement())
  caption String? @db.VarChar(255)
}

model components_links_nav_items {
  id   Int     @id @default(autoincrement())
  name String? @db.VarChar(255)
  slug String? @db.VarChar(255)
}

model components_locations_locations {
  id                                        Int                                         @id @default(autoincrement())
  type                                      String?                                     @db.VarChar(255)
  components_locations_locations_components components_locations_locations_components[]
}

model components_locations_locations_components {
  id                               Int                            @id @default(autoincrement())
  field                            String                         @db.VarChar(255)
  order                            Int
  component_type                   String                         @db.VarChar(255)
  component_id                     Int
  components_locations_location_id Int
  components_locations_locations   components_locations_locations @relation(fields: [components_locations_location_id], references: [id])
}

model components_locations_properties {
  id                   Int       @id @default(autoincrement())
  timestamp            DateTime? @db.Timestamptz(6)
  altitude             Int?
  speed                Int?
  horizontal_accuracy  Int?
  vertical_accuracy    Int?
  motion               Json?
  pauses               Boolean?
  activity             String?   @db.VarChar(255)
  desired_accuracy     String?   @db.VarChar(255)
  deferred             String?   @db.VarChar(255)
  significant_change   String?   @db.VarChar(255)
  locations_in_payload Int?
  battery_state        String?   @db.VarChar(255)
  battery_level        Decimal?  @db.Decimal(10, 2)
  device_id            String?   @db.VarChar(255)
  wifi                 String?   @db.VarChar(255)
}

model components_locations_trips {
  id               Int       @id @default(autoincrement())
  distance         Int?
  mode             String?   @db.VarChar(255)
  current_location Json?
  start_location   Json?
  start            DateTime? @db.Timestamptz(6)
}

model components_reaction_post_reactions {
  id      Int  @id @default(autoincrement())
  useful  Int?
  starred Int?
}

model components_recipes_ingredients {
  id         Int     @id @default(autoincrement())
  amount     String? @db.VarChar(255)
  ingredient String? @db.VarChar(255)
}

model components_socials_user_socials {
  id        Int     @id @default(autoincrement())
  plattform String? @unique @db.VarChar(255)
  link      String? @db.VarChar(255)
}

model configs {
  id                 Int                  @id @default(autoincrement())
  siteTitle          String?              @db.VarChar(255)
  siteTitleShort     String?              @db.VarChar(255)
  siteTitleAlt       String?              @db.VarChar(255)
  siteDescription    String?              @db.VarChar(255)
  siteLogo           String?              @db.VarChar(255)
  apiUrl             String?              @db.VarChar(255)
  homePath           String?              @db.VarChar(255)
  pathPrefix         String?              @db.VarChar(255)
  siteRss            String?              @db.VarChar(255)
  dateFormat         String?              @db.VarChar(255)
  copyright          String?              @db.VarChar(255)
  defaultLang        String?              @db.VarChar(255)
  themeColor         String?              @db.VarChar(255)
  backgroundColor    String?              @db.VarChar(255)
  loading            String?              @db.VarChar(255)
  created_by         Int?
  updated_by         Int?
  created_at         DateTime?            @db.Timestamptz(6)
  updated_at         DateTime?            @db.Timestamptz(6)
  github             String?              @db.VarChar(255)
  twitter            String?              @db.VarChar(255)
  linkedin           String?              @db.VarChar(255)
  instagram          String?              @db.VarChar(255)
  configs_components configs_components[]
}

model configs_components {
  id             Int     @id @default(autoincrement())
  field          String  @db.VarChar(255)
  order          Int
  component_type String  @db.VarChar(255)
  component_id   Int
  config_id      Int
  configs        configs @relation(fields: [config_id], references: [id])
}

model core_store {
  id          Int     @id @default(autoincrement())
  key         String? @db.VarChar(255)
  value       String?
  type        String? @db.VarChar(255)
  environment String? @db.VarChar(255)
  tag         String? @db.VarChar(255)
}

model cvs {
  id             Int              @id @default(autoincrement())
  title          String?          @db.VarChar(255)
  subtitle       String?          @db.VarChar(255)
  smallBio       String?          @db.VarChar(255)
  published_at   DateTime?        @db.Timestamptz(6)
  created_by     Int?
  updated_by     Int?
  created_at     DateTime?        @default(now()) @db.Timestamptz(6)
  updated_at     DateTime?        @default(now()) @db.Timestamptz(6)
  cvs_components cvs_components[]
}

model cvs_components {
  id             Int    @id @default(autoincrement())
  field          String @db.VarChar(255)
  order          Int
  component_type String @db.VarChar(255)
  component_id   Int
  cv_id          Int
  cvs            cvs    @relation(fields: [cv_id], references: [id])
}

model footer_navs {
  id                     Int                      @id @default(autoincrement())
  published_at           DateTime?                @db.Timestamptz(6)
  created_by             Int?
  updated_by             Int?
  created_at             DateTime?                @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?                @default(now()) @db.Timestamptz(6)
  footer_navs_components footer_navs_components[]
}

model footer_navs_components {
  id             Int         @id @default(autoincrement())
  field          String      @db.VarChar(255)
  order          Int
  component_type String      @db.VarChar(255)
  component_id   Int
  footer_nav_id  Int
  footer_navs    footer_navs @relation(fields: [footer_nav_id], references: [id])
}

model header_navs {
  id                     Int                      @id @default(autoincrement())
  published_at           DateTime?                @db.Timestamptz(6)
  created_by             Int?
  updated_by             Int?
  created_at             DateTime?                @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?                @default(now()) @db.Timestamptz(6)
  header_navs_components header_navs_components[]
}

model header_navs_components {
  id             Int         @id @default(autoincrement())
  field          String      @db.VarChar(255)
  order          Int
  component_type String      @db.VarChar(255)
  component_id   Int
  header_nav_id  Int
  header_navs    header_navs @relation(fields: [header_nav_id], references: [id])
}

model likes {
  id           Int       @id @default(autoincrement())
  count        Int?
  published_at DateTime? @db.Timestamptz(6)
  created_by   Int?
  updated_by   Int?
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at   DateTime? @default(now()) @db.Timestamptz(6)
}

model links {
  id           Int       @id @default(autoincrement())
  title        String?   @db.VarChar(255)
  link         String?   @db.VarChar(255)
  date         DateTime? @db.Timestamptz(6)
  description  String?
  published_at DateTime? @db.Timestamptz(6)
  created_by   Int?
  updated_by   Int?
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at   DateTime? @default(now()) @db.Timestamptz(6)
  slug         String?   @unique @db.VarChar(255)
}

model locations {
  id         Int       @id @default(autoincrement())
  created_by Int?
  updated_by Int?
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  lat        Float?
  lon        Float?
  acc        Int?
  alt        Int?
  batt       Int?
  bs         Int?
  cog        Decimal?  @db.Decimal(10, 2)
  rad        Int?
  t          String?   @db.VarChar(255)
  tid        String?   @db.VarChar(255)
  tst        Int?
  vac        Int?
  vel        Int?
  p          Decimal?  @db.Decimal(10, 2)
  conn       String?   @db.VarChar(255)
  topic      String?   @db.VarChar(255)
  inregions  Json?
  ssid       String?   @db.VarChar(255)
  bssid      String?   @db.VarChar(255)

  @@index([alt], name: "alt_idx")
  @@index([lat], name: "lat_idx")
  @@index([lon], name: "lon_idx")
  @@index([vel], name: "vel_idx")
}

model navigations {
  id                     Int                      @id @default(autoincrement())
  published_at           DateTime?                @db.Timestamptz(6)
  created_by             Int?
  updated_by             Int?
  created_at             DateTime?                @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?                @default(now()) @db.Timestamptz(6)
  navigations_components navigations_components[]
}

model navigations_components {
  id             Int         @id @default(autoincrement())
  field          String      @db.VarChar(255)
  order          Int
  component_type String      @db.VarChar(255)
  component_id   Int
  navigation_id  Int
  navigations    navigations @relation(fields: [navigation_id], references: [id])
}

model notes {
  id                  Int                @id @default(autoincrement())
  date                DateTime?          @db.Timestamptz(6)
  content             String?
  published_at        DateTime?          @db.Timestamptz(6)
  created_by          Int?
  updated_by          Int?
  created_at          DateTime?          @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?          @default(now()) @db.Timestamptz(6)
  title               String?            @db.VarChar(255)
  slug                String?            @unique @db.VarChar(255)
  publishOnTwitter    Boolean?
  publishOnInstagram  Boolean?
  inReplyTo           Boolean?
  likeOf              Boolean?
  repostOf            Boolean?
  quoteOf             Boolean?
  ofUrl               String?            @db.VarChar(255)
  syndLinkInstagram   String?            @db.VarChar(255)
  syndLinkTwitter     String?            @db.VarChar(255)
  syndLinkReddit      String?            @db.VarChar(255)
  mentionOf           Boolean?
  publishOnReddit     Boolean?
  category            String?            @db.VarChar(255)
  lat                 String?            @db.VarChar(255)
  lon                 String?            @db.VarChar(255)
  temperature         Decimal?           @db.Decimal(10, 2)
  weather             String?            @db.VarChar(255)
  weather_main        String?            @db.VarChar(255)
  weather_description String?            @db.VarChar(255)
  weather_icon        String?            @db.VarChar(255)
  notes_components    notes_components[]
}

model notes_components {
  id             Int    @id @default(autoincrement())
  field          String @db.VarChar(255)
  order          Int
  component_type String @db.VarChar(255)
  component_id   Int
  note_id        Int
  notes          notes  @relation(fields: [note_id], references: [id])
}

model nows {
  id           Int       @id @default(autoincrement())
  content      String?
  published_at DateTime? @db.Timestamptz(6)
  created_by   Int?
  updated_by   Int?
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at   DateTime? @default(now()) @db.Timestamptz(6)
}

model pages {
  id           Int       @id @default(autoincrement())
  title        String?   @db.VarChar(255)
  content      String?
  date         DateTime? @db.Date
  created_by   Int?
  updated_by   Int?
  created_at   DateTime? @db.Timestamptz(6)
  updated_at   DateTime? @db.Timestamptz(6)
  slug         String?   @unique @db.VarChar(255)
  description  String?
  published_at DateTime? @db.Timestamptz(6)
}

model posts {
  id                      Int                @id @default(autoincrement())
  title                   String?            @unique @db.VarChar(255)
  content                 String?
  excerpt                 String?
  date                    DateTime?          @db.Timestamptz(6)
  slug                    String?            @unique @db.VarChar(255)
  status                  String?            @db.VarChar(255)
  author                  Int?
  created_by              Int?
  updated_by              Int?
  created_at              DateTime?          @db.Timestamptz(6)
  updated_at              DateTime?          @db.Timestamptz(6)
  lang                    String?            @db.VarChar(255)
  user                    Int?
  published_at            DateTime?          @db.Timestamptz(6)
  starred                 Int?
  heart                   Int?
  useful                  Int?
  reaction                Int?
  dateUpdated             DateTime?          @db.Timestamptz(6)
  positive_feedback_count Int?
  negative_feedback_count Int?
  vgworttracking          String?            @db.VarChar(255)
  vgwortpubliccode        String?            @db.VarChar(255)
  vgwortprivatecode       String?            @db.VarChar(255)
  posts_components        posts_components[]
}

model posts_components {
  id             Int    @id @default(autoincrement())
  field          String @db.VarChar(255)
  order          Int
  component_type String @db.VarChar(255)
  component_id   Int
  post_id        Int
  posts          posts  @relation(fields: [post_id], references: [id])
}

model posts_tags__tags_posts {
  id      Int  @id @default(autoincrement())
  tag_id  Int?
  post_id Int?
}

model reactions {
  id           Int       @id @default(autoincrement())
  postId       Int?
  count        Int?
  published_at DateTime? @db.Timestamptz(6)
  created_by   Int?
  updated_by   Int?
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at   DateTime? @default(now()) @db.Timestamptz(6)
}

model recipes {
  id                 Int                  @id @default(autoincrement())
  title              String?              @db.VarChar(255)
  description        String?
  duration           Int?
  published_at       DateTime?            @db.Timestamptz(6)
  created_by         Int?
  updated_by         Int?
  created_at         DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?            @default(now()) @db.Timestamptz(6)
  subtitle           String?              @db.VarChar(255)
  slug               String?              @unique @db.VarChar(255)
  yield              Int?
  recipes_components recipes_components[]
}

model recipes_components {
  id             Int     @id @default(autoincrement())
  field          String  @db.VarChar(255)
  order          Int
  component_type String  @db.VarChar(255)
  component_id   Int
  recipe_id      Int
  recipes        recipes @relation(fields: [recipe_id], references: [id])
}

model strapi_administrator {
  id                 Int      @id @default(autoincrement())
  firstname          String?  @db.VarChar(255)
  lastname           String?  @db.VarChar(255)
  username           String?  @db.VarChar(255)
  email              String   @unique @db.VarChar(255)
  password           String?  @db.VarChar(255)
  resetPasswordToken String?  @db.VarChar(255)
  registrationToken  String?  @db.VarChar(255)
  isActive           Boolean?
  blocked            Boolean?
  preferedLanguage   String?  @db.VarChar(255)
}

model strapi_permission {
  id         Int       @id @default(autoincrement())
  action     String    @db.VarChar(255)
  subject    String?   @db.VarChar(255)
  fields     Json?
  conditions Json?
  role       Int?
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  properties Json?
}

model strapi_role {
  id          Int       @id @default(autoincrement())
  name        String    @unique @db.VarChar(255)
  code        String    @unique @db.VarChar(255)
  description String?   @db.VarChar(255)
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
}

model strapi_users_roles {
  id      Int  @id @default(autoincrement())
  user_id Int?
  role_id Int?
}

model strapi_webhooks {
  id      Int      @id @default(autoincrement())
  name    String?  @db.VarChar(255)
  url     String?
  headers Json?
  events  Json?
  enabled Boolean?
}

model subscribers {
  id         Int       @id @default(autoincrement())
  email      String    @unique @db.VarChar(255)
  created_by Int?
  updated_by Int?
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
}

model tags {
  id              Int       @id @default(autoincrement())
  name            String    @unique @db.VarChar(255)
  description     String
  color           String?   @db.VarChar(255)
  post            Int?
  created_by      Int?
  updated_by      Int?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  slug            String    @unique @db.VarChar(255)
  backgroundColor String?   @unique @db.VarChar(255)
  tag             Int?
  note            Int?
  photo           Int?
}

model upload_file {
  id                Int       @id @default(autoincrement())
  name              String    @db.VarChar(255)
  alternativeText   String?   @db.VarChar(255)
  caption           String?   @db.VarChar(255)
  width             Int?
  height            Int?
  formats           Json?
  hash              String    @db.VarChar(255)
  ext               String?   @db.VarChar(255)
  mime              String    @db.VarChar(255)
  size              Decimal   @db.Decimal(10, 2)
  url               String    @db.VarChar(255)
  previewUrl        String?   @db.VarChar(255)
  provider          String    @db.VarChar(255)
  provider_metadata Json?
  created_by        Int?
  updated_by        Int?
  created_at        DateTime? @db.Timestamptz(6)
  updated_at        DateTime? @db.Timestamptz(6)
}

model upload_file_morph {
  id             Int     @id @default(autoincrement())
  upload_file_id Int?
  related_id     Int?
  related_type   String?
  field          String?
  order          Int?
}

model users_permissions_permission {
  id         Int     @id @default(autoincrement())
  type       String  @db.VarChar(255)
  controller String  @db.VarChar(255)
  action     String  @db.VarChar(255)
  enabled    Boolean
  policy     String? @db.VarChar(255)
  role       Int?
  created_by Int?
  updated_by Int?

  @@map("users-permissions_permission")
}

model users_permissions_role {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  description String? @db.VarChar(255)
  type        String? @unique @db.VarChar(255)
  created_by  Int?
  updated_by  Int?

  @@map("users-permissions_role")
}

model users_permissions_user {
  id                                Int                                 @id @default(autoincrement())
  username                          String                              @unique @db.VarChar(255)
  email                             String                              @db.VarChar(255)
  provider                          String?                             @db.VarChar(255)
  password                          String?                             @db.VarChar(255)
  resetPasswordToken                String?                             @db.VarChar(255)
  confirmed                         Boolean?
  blocked                           Boolean?
  role                              Int?
  created_by                        Int?
  updated_by                        Int?
  created_at                        DateTime?                           @db.Timestamptz(6)
  updated_at                        DateTime?                           @db.Timestamptz(6)
  bio                               String?
  subscriber                        Boolean?
  confirmationToken                 String?                             @db.VarChar(255)
  users_permissions_user_components users_permissions_user_components[]

  @@map("users-permissions_user")
}

model users_permissions_user_components {
  id                        Int                    @id @default(autoincrement())
  field                     String                 @db.VarChar(255)
  order                     Int
  component_type            String                 @db.VarChar(255)
  component_id              Int
  users_permissions_user_id Int                    @map("users-permissions_user_id")
  users_permissions_user    users_permissions_user @relation(fields: [users_permissions_user_id], references: [id])

  @@map("users-permissions_user_components")
}

model photos {
  id                Int                 @id @default(autoincrement())
  title             String?             @db.VarChar(255)
  description       String?
  slug              String?             @unique @db.VarChar(255)
  published_at      DateTime?           @db.Timestamptz(6)
  created_by        Int?
  updated_by        Int?
  created_at        DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?           @default(now()) @db.Timestamptz(6)
  photos_components photos_components[]
}

model photos_components {
  id             Int    @id @default(autoincrement())
  field          String @db.VarChar(255)
  order          Int
  component_type String @db.VarChar(255)
  component_id   Int
  photo_id       Int
  photos         photos @relation(fields: [photo_id], references: [id])
}

model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

model strava_tokens {
  id            Int       @id @default(autoincrement())
  access_token  String?   @db.VarChar(255)
  refresh_token String?   @db.VarChar(255)
  published_at  DateTime? @db.Timestamptz(6)
  created_by    Int?
  updated_by    Int?
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)
}
